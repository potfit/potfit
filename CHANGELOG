20180909
- Remove support for ACML. For details see https://github.com/potfit/potfit/issues/43

20180709:
- Fix stiweb and tersoff potentials when used together with global parameters

20180226:
- Disable LAMMPS output for MEAM potentials, which is currently not implemented properly

20180214:
- If there are no atoms inside a potential interaction range potfit will now report an error
- Added tests for minimal distance calculation

=======================================================

potfit-next
+ completely rewrote internal potfit data structure
+ move source code into src directory

potfit-0.7.1 (20141127)
+ remove the version.h file, it caused too much trouble
+ make vasp2force compatible with VASP version 5 OUTCAR files
+ fix output of LAMMPS potential tables
+ small bugfixes

potfit-0.7.0 (20140123)
+ add global scaling parameter (UNTESTED)
+ add tbeam interaction
+ remove WZERO and PARAB options
+ add modified tersoff potential
+ remove NEWSCALE option
+ remove NORESCALE option, rescaling is now no longer enabled by default
  enable it with the RESCALE option
+ bump copyright to 2014

potfit-0.6.0 (20130821)
+ merge MEAM implementation of Jeremy Nicklas (Ohio State University)
+ add Stillinger-Weber potential (option stiweb)
+ add Tersoff potential (option tersoff)
+ remove compatibility mode
+ update diagnostic messages and errors to be more clear
+ most of the helper scripts in the util directory have been rewritten in python

potfit-0.5.3 (20130625)
+ fix building in 32bit environments
+ support latest versions of icc and mkl
+ renamed cbb potential to kawamura

potfit-0.5.2 (20130301)
+ EAM potentials can now be used together with electrostatics (COULOMB or DIPOLE)
+ fixed bug in rescale for pot 4 (reported by Andreas Ruehl)
+ fixed bugs in functions.c (reported by Albert Iskandarov)
+ fixed bug with box of contributing particles

potfit-0.5.1 (20120913)
+ add support for writing LAMMPS potentials (EAM and ADP for now)
+ [BUG] fix invariant potentials, should be working correctly now
+ [BUG] fix recognition of elements with a single letter
+ add support for "box of contributing particles"
+ bump copyright to 2012
+ [BUG] fix MPI_Gatherv error
+ add support for ACML5

potfit-0.5 (20111216)
+ fix invariant chemical potentials
+ errors for short distances are now more clear
+ rms for forces is now calculated correctly
+ fix wrong element detection in config.c
+ new internal initialization method for analytic potential functions
+ don't move the binary if BIN_DIR is empty
+ validate parameters from parameter file after initialization
+ add auto_t feature for simann, enable with "anneal_temp auto"
+ the error sum is now calculated as w*d^2 and no longer as (w*d)^2
+ added the proper citations to most of the analytic potential functions
+ [APOT] the pohlong potential has been renamed to "bjs" to credit the original author
  pohlong can still be used for compatibility with older potential files
+ fixed a bug where not the latest value of the global parameters was used to write the
  imd potentials
+ add compatibility mode for old (w*d)^2 error sum, enable with compat flag
+ adjust copyright years to 2011
+ lots of code clean-up
+ move analytic function to their own header file
+ abort if anneal_temp is missing in parameter file
+ update comments
+ revert the r=0 fix in spline calculation
+ make simann the default algorithm for all potentials, evo is still
  available via _evo_ compile option
+ comments are now allowed in potential files between blocks, starting with #
+ [ADP] fix writing for the quadrupole potential for systems with more than one atom type
+ [APOT] fix bug with chemical potentials and global parameters
+ [EVO] change initialization for tabulated potentials
+ timing information is now shown if output_prefix is not set

dipole
+ enhanced output for dipole-convergency
+ elstat parameter dp_kappa can now be optimized
+ new outout coul2imd now available
+ new short-range potential (Buckingham) now available for electrostatic

--> POTFIT-20101207 released

devel-20101207
+ properly check for the correct potential types
+ remove some unneeded variables

devel-20101201
+ increase the epsilon for the powell_lsq from 0.0001 to 0.001
+ added line numbers for errors in config files
+ error() and warning() functions can now be used with arguments like printf

devel-20101122
+ change weights once more from w*d^2 to (w*dx)^2
+ adjust dummy constraints output for console
+ limit number of cpus to nconf

devel-20101108
+ revert the normalization of energy and stress weights
+ small technical changes

dipole-20101025
+ COULOMB and DIPOLE are now working with mpi

devel-20101018
+ fix strcpy bug with stresses
+ cutoff radius for embedding function is now read from potential file
+ energy and stress weight normalized:
  if both are set to 1. then the energy is equally
  weighted as the forces and as the stresses
  (effectively the squared energy difference is multiplied by
   eng_weight * 3 * atoms_in_configuration)
+ added timing information from dipole tree

devel-20101006
+ remove some redundant header files
+ many bugs in new optimization algorithm fixed

devel-20101004
+ add exp_plus potential
+ sorted potfit.h and added a few comments, read_apot_table -> read_pot_table0
+ differential evolution is now the default optimization algorithm,
	simulated annealing can be used with simann compile option

dipole-20101004
+ new outputfiles: coulomb-potential-tables

devel-20101001
+ ADP is now available for tabulated potenials, format 3 or 4
+ [APOT] check potentials for nan
+ added NDEBUG flag, enabling the use of assert's for debugging
+ [APOT] add mishin adp potentials, not quite easy to handle
+ implemented self-adjusting control parameters for diff_evo
+ new stopping criterion for diff_evo, replaced evo_width by evo_threshold

--> POTFIT-20100928 released

trunk-20100928
+ [APOT] fix severe bug with imd potentials

trunk-20100920
+ adjust evo abortion criterion
+ fix force2imd script, is now consistent with potfit config numbering
+ [APOT] adjust ccb potential function to include all parameters
+ the version info is now more precise
+ [vasp2force] remove warning about single atom energy if -e is not given

dipole-20100831
+ Option DIPOLE now calculates the exactly same induced dipole moments and
  fields within the self-consistent iteration as IMD

dipole-20100830
+ Option DIPOLE now calculates the exactly same forces, energies and stresses
  as IMD

dipole-20100825
+ Option COULOMB now calculates the exactly same forces, energies and stresses
  as IMD

dipole-20100817
+ last alignments with IMD

dipole-20100816
+ Option MONOPOLE renamed as COULOMB (adapted to IMD)
+ charge neutrality now provided

--> POTFIT-20100812 released

trunk-20100812
+ make endpot optional, is set to ${startpot}_end it not given
+ change i386 profile to i586
+ remove a few commented lines that are not necessary any more
+ set reasonable inital values for starting parameters
+ [APOT] add cbb potential to potfit and makeapot
+ add flagfile interruption to evo and remove unneeded variables
+ remove unneeded header files as well
+ adjust diff_evo parameters

trunk-20100810
+ strip even more (comments)

dipole-20100809
+ split option DIPOLE in MONOPOLE and DIPOLE, thereby MONOPOLE is implied by DIPOLE
+ uf (use forces) can now be used in connection with electrostatic forces
+ option FWEIGHT now works with options MONOPOLE and DIPOLE
+ all tail-functions are now evaluated without splines in order to have
  accurate derivations

devel-20100809
+ final commit before next release
+ evolutionary algorithm now restarts if average==best
+ fix Makefile for gcc profiles

dipole-20100804
+ Self energy terms added
+ all splines for electrostatic tail-functions are now evaluated once only
+ shifts changed from (r-r_cut) to 1/2*(r^2 - r_cut^2) (adapted to IMD)
+ output-file Dipol_convergency is now available

devel-20100730
+ more optimization flags for icc and gcc
+ adjust comments to c-style
+ remove openmp
+ Makefile updated
+ [APOT] add support for ACML for analytic functions

dipole-20100729
+ last loop added for dipole calculation

dipole-20100729
+ tail of dipole potential -> all electrostatic potential-tails (five) implemented

devel-20100726
+ strip binaries
+ clean up Makefile, many old targets removed, 4 targets remaining
+ IMDSYS has been removed, set your system in the Makefile

trunk-20100726
+ [ADP] fix? force calculation
+ [APOT] fix punishments with invariant potentials

dipole-20100713
+ tail of coloumb-dipole potential
+ full dipole table now initializing

trunk-20100709
+ [APOT] reduce number of sampling points for analytic potentials
+ [APOT] makeapot now writes the correct potential type
+ [APOT] fixed a bug with cp and globals
+ don't write errors if the weight is 0 for energy or stress
+ [APOT] update NOPUNISH target a little bit

dipole-20100707
+ third loop in calc_forces_dipole

dipole-20100705
+ splines for tail of coulomb-potential

dipole-20100702
+ monopole enhancement done

dipole-20100630
+ dipole output
+ energy conserving shift for ms-potential
+ new properties static field and short-range dipole moment added to atom_t

trunk-20100623
+ change indent mode a little bit
  this changes many lines, so put it in an extra commit

trunk-20100623
+ Makefile: exit if there is no compiler available
+ [APOT] globals can now also be fixed
+ force data is now separated by 2 blank lines, makes scatterplots for single configs easy

devel-20100610
+ [APOT] make punishments for apot optional
+ there is now (again) a limit on the size of the directional vectors v in simann

trunk-20100609
+ revert simann changes from 201005012
+ update plotapot script for adp potentials
+ update GPL notice
+ add new analytic functions and update old ones

trunk-20100531
+ adapt force routines to new col system

trunk-20100525
+ make scripts executable
+ fix conf_weights for stresses

adp-20100528
+ fix conf_weight for stresses
+ adp is now working with mpi
+ save coloumns for interactions, untested with tabulated potentials for now

adp-20100527
+ adp should now be complete, mpi still missing

bzr-20100512
+ moved files from *_r.* to *.*, all types are double, include header for bracketing
+ fix warnings when compiling with debug flag
+ simann now counts all new parameters as an attempt, even if they were out of bounds
+ optimize evo output
+ properly initialize the dSFMT prng

bzr-20100510
+ removed some commented code
+ make the order of chemical potentials, globals and other stuff in the potential file
	arbitrary
+ switch random number generator to double precision Fast Mersenne Twister (dSFMT)
	this has not been tested on other platforms
+ move normdist to utils.c, it is used in simann.c and diff_evo.c
+ remove potscale and oldcode completely
+ move update_slots to an earlier point of execution time, only root does it now
+ remove pot_list completely
+ change MAXNEIGH to dynamic array
+ only save new neighbors, speeds up the optimization significantly
  calculate forces with actio=reactio

<<<<<<< TREE
=======
bzr-20100429
+ new functions and loops added for dipole calculation

>>>>>>> MERGE-SOURCE
bzr-20100426
<<<<<<< TREE
+ re-add MEAM part
=======
+ re-add DIPOLE part
>>>>>>> MERGE-SOURCE

bzr-20100426
+ start migration to bazaar vcs
+ prepare trunk:
	removed .revisions file
	moved potscale to util directory
	removed html directory
	merged smooth.c into functions.c
	remove MEAM, ADP and DIPOLE parts
	remove all references to format5

bzr-20100429
+ new functions and loops added for dipole calculation

CVS-20100422
+ final updates
+ remove charge-extension for ms- and lj-potential

CVS-20100420
+ remove DEBUG_FORCES from pair and eam force calculation
+ prepare for release, minor changes

CVS-20100416
+ import force_adp.c, energy is working, forces are still missing
+ stens -> sym_tens

CVS-20100415
+ new force-file forces_dipole.c added needed for option DIPOLE

CVS-20100414
+ [APOT] chemical potentials are now disabled by default, can be enabled with
		 "enable_cp 1" in parameter file
+ potfit now forces the correct ntypes-setting in the parameter file
+ new information in potential files: #T <interaction>, e.g. #T EAM
+ new potential morse-stretch added
+ charge-extension for ms- and lj-potential
+ option DIPOLE implemented (including new parameters, calc_forces_dipole)

CVS-20100408
+ Actually, there are elements with only one letter

CVS-20100330
+ vektor -> vector
+ first preparations for ADP potentials
+ fix seed option, it actually never worked

CVS-20100312
+ fix simann for tabulated potentials

CVS-20100224
+ add d_eps parameter as an error margin in powell_lsq, can be set in param file
	via d_eps
+ write error report to a file (output_prefix.error)
	grep for "RMS" for force, energy, stress rms-error and total error sum in one line
+ cleaned up header file potfit.h
+ flagfile will be deleted if fit is terminated
+ [APOT] the punishment for bad parameters is controlled via "apot_punish" in parameter file
	default value is 0
	This applies only to restrictions, not for parameters out of bounds !

CVS-20100218
+ bump copyright years to 2010
+ [APOT] add a few new analytic potential functions

CVS-20100204
+ [MEAM] initial commit

CVS-20100204
+ [APOT] added support for global parameters, beta stage
+ [APOT] write correct embedding function for imd potentials
+ [APOT] fix parameter check
+ [general] more code cleanup, add some comments

CVS-20100125
+ split up force calculation in different files
+ update Makefile for EAM/MEAM and PAIR targets
+ [APOT] make imd potentials more consistant
+ [APOT] fix periodic parameters with smooth cutoff

CVS-20100111
+ [APOT] use new cutoff function
+ general code cleanup, hopefully everything still works as expected
+ only compile sources needed for the selected targets
+ make mkl default for x86_64-gcc

CVS-20091216
+ added option to assign different weights to configurations with #W option
+ fixed stress output
+ last stable version before major changes are commited (new cutoff, adp and maybe meam)

CVS-20091208
+ [APOT] fix invariant potentials

CVS-20091202
+ fix more uninitialized values
+ [APOT] fix rare segfault with universal function
+ evolution algorithm polished

CVS-20091120
+ [APOT] fix punishments for pair potentials
+ fix some memory leaks (experimental, may break mpi)
+ [APOT] add evolutionary algorithm for testing purposes (activate with _evo target)
+ fix uninitialized values

CVS-20091012
+ don't write punishments if opt=0
+ [APOT] fix cp_ detection with element names

CVS-20090925
+ [APOT] more fixes for EAM
+ [APOT] fix spline calculation
+ minor code cleanups
+ [APOT] fix range for embedding function in plot files
+ [APOT] fix mpi with new grad function

CVS-20090912
+ fix compilation without EAM
+ [APOT] be quiet about compnodes if no cn is found in potential file
+ [APOT] improve cp_ and cn output in potential files
+ [APOT] read arbitrary lines of comments
+ [APOT] write cutoff function to potential file
+ temporary fix for spline extrapolation
+ [APOT] fix invstep for potentials
+ [APOT] fix next severe eam bug, how could this ever work?

CVS-20090902
+ [APOT] clean up internal punishments
+ pointers to important positions in force-vector added
+ improved output of punishment constraints
+ [apot] fix eopp parameter check

CVS-20090831
+ print error messages to stderr (setup)

CVS-20090819
+ [APOT] fix severe _sc bug
+ [APOT] override manual input for embedding function cutoff
+ be more precise about unexpected end of files
+ [APOT] fix _sc detection
+ [APOT] adjust imd-output to new cutoff

CVS-20090717
+ code cleanup in forces.c
+ add punishments to force-array for powell_lsq

CVS-20090706
+ potfit writes the #C line also for potentials of format 3+4
+ fix element detection for configurations containing only 1 element
+ more fixes for element and configuratiion mismatch detection
+ removed code for increased cutoff completely, cubic cutoff function always cuts at rcut
+ [APOT] fix punishment for "universal"

CVS-20090616
+ new build target FORCES - prints out every force calculated, so be very careful about
  logging, only recommended for runs without optimization
  (FORCES is only active in combination with DEBUG)
+ [APOT] added new potential and some tweaks for optimizaion
+ added some units to the rms error
+ potfit no longer reads and prints configuration names
+ new script available: list_config.sh - reads vasp2force comments from force files
  and displays them with the corresponding potential number
+ potfit now reports any punishments in the error report, if there are any
+ new terminating criterion for simann: now depending on the relative change of F and Fopt

CVS-20090603
+ [APOT] added function to check parameters for some additional constraints
+ [APOT] moved punishment to extra function and add eopp punishment
+ [APOT] initialize splines for eam correctly

CVS-20090515
+ added support for cells smaller than cutoff radius
+ added support for chemical species via #C in config and potential files
+ [APOT] smooth_cutoff is now using a cubic polynomial instead of a parabola
  that makes it a lot more stable regarding the cutoff radius

CVS-20090513
+ [MPI] fixed a bug that ended in an endless loop if an error was
  encountered before the first broadcast
+ the radial distribution output now states how many functions it contains
+ [APOT] the plotapot script now reads how many rad. dist. there are
+ [APOT] fixed a bug with potentials not using _sc
+ replaced end{force,energy,stress} by output_prefix
  the files "output_prefix".{force,energy,stress,rho_loc,punish} will be written if present
  else the output will be redirected to stdout
+ the force file now shows the atomtype

CVS-20090421
+ [APOT] fixed parameters (pmin==pmax) are now really fixed
+ [APOT] lots of eam bugs fixed

CVS-20090414
+ [APOT] first (working) EAM implementation - needs lots of testing
+ [APOT] don't use rcut
+ [APOT] always enable -DNORESCALE (only important for EAM)

CVS-20090408
+ [APOT] update compnodes script with -n option (only shows compnodes)
+ [APOT] add makeapot script to generate analytic potential files easily
+ add option to write energy output to file (endenergy)
+ potfit now reads the comments from the vasp2force.sh script and
  assigns the names to the potentials
+ [APOT] update "_" detection for potentials
+ fix mindist for ntypes > 2
+ vasp2force.sh does not need POSCAR anymore, it's optional now
+ added pot_index to iterate through potentials
+ [APOT] fix bug with disable_cp ending up in an infinite loop
+ [APOT] added MPI-parallelisation

CVS-20090312
+ [APOT] composition nodes were completely broken, fix that
+ [APOT] compnodes utility to calculate some composition nodes

CVS-20090306
+ output for stress can now be written to a file as well
+ [APOT] fixed potentials without _sc option
+ [APOT] added composition nodes to chemical potentials (only 2d)

CVS-20090216
+ fix rms error for energy-weight
+ [APOT] only write new potential after step adjustment
+ [APOT] the first step of a newly read potential was always wrong
+ don't write end_pot if there was no optimization
+ some cleanup for the error output
+ write unweighted energies and stresses
+ [APOT] added new potentials, for details see web page

CVS-20090210
+ [ACML] Updated compiler flags for acml, gcc...

CVS-20090116
+ [APOT] reworked the validate part
+ [APOT] enabled MPI support for apot, not tested yet, probably broken by chemical potentials
+ [APOT] added chemical potentials to the fit parameters
+ added na_typ variable, that holds the number of atoms per atomtype
+ write force data to file if endforce is given in parameter file
+ added option to write radial pair distances
+ [APOT] cp_# parameters in potential files are now ignored if disable_cp=1
+ [APOT] apot now displays rcut as cutoff and no longer the end of the potential
+ [APOT] added radial distribution to awk script
+ [APOT] fix bug where potential output was always smoothed
+ added rms errors for forces, energies, stress
+ [APOT] the awk script now accepts radial distributions as well

CVS-20081201
+ [APOT] new_slots should now be a lot faster since we only update if there actually
  is a new parameter or a new cutoff radius
+ [APOT] Improved awk script to read an arbitrary number of potential files
+ [APOT] some minor tweaks in the SA-algorithm, mainly for speed purposes
+ [APOT] fixed bug with temporary potential files, now the current potential
  and not the past one is written to the tempfile
+ new variable double *calc_list that stores the parameters
  the potential in the calc_table was generated from

CVS-20081126
+ [APOT] Added an awk script to convert apot potentials to gnuplot format
+ [APOT] A new validate function to check the generated potentials has
  been implemented
+ [APOT] Removed precomputed power-tables
+ [APOT] Completely rewritten the smooth-cutoff option (now beta stage)
+ imdpot is now optional and no longer mandatory
+ [APOT] New parameter "plotmin", the plotting potential and imd potential will
  begin at this point

Changes in potfit20081104

Bugfix:

+ Error in bracketing (pathological cases)
+ Issues with new MKL/icc releases.
+ Bug in potential rescaling
+ vasp2force Bug: Incorrect scale.

Enhancement:

+ ACML support in Makefile
+ Better output in cases of short distance errors
+ Separate optimisation potential from calculation potential
+ EAM potentials: Implementation of gauge constraints with NORESC compilation
  option redone.
+ Improved output during optimisation.
+ vasp2force support for multiple MD steps greatly improved.
+ Reorder potentials with pottrans.

New Features:

+ Analytic pair potentials (alpha).
+ Awk scripts for potential generation, combination, ...
